{
    "uid": "D94DB100743D3041A36BDD9710A7C3C37DE2",
    "lastModificationTime": 0,
    "items": {
        "name": "SRD_SuperMessageEditor",
        "type": "game_script",
        "order": 0,
        "content": "/*************************************************\n *\n * Super Message Editor\n * \n * VNM Game JavaScript File\n *\n * by Robert Borghese (SumRndmDde)\n *\n *************************************************/\n\nvar SRD = SRD || {};\nSRD.SuperMessageEditor = SRD.SuperMessageEditor || {};\nSRD.SuperMessageEditor._version = '1.0.0';\n\n(function(_) {\n\n// Credit: https://stackoverflow.com/a/5624139/8139481\n_.hexToColObj = function(source) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1], 16),\n            green: parseInt(result[2], 16),\n            blue: parseInt(result[3], 16),\n            alpha: 255\n        };\n    } else {\n        return null;\n    }\n};\n\n_.rgbToColObj = function(source) {\n    var result = /^(?:rgb)?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1]),\n            green: parseInt(result[2]),\n            blue: parseInt(result[3]),\n            alpha: 255\n        };\n    } else {\n        return null;\n    }\n};\n\n_.rgbaToColObj = function(source) {\n    var result = /^(?:rgba)?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1]),\n            green: parseInt(result[2]),\n            blue: parseInt(result[3]),\n            alpha: parseInt(result[4])\n        };\n    } else {\n        return null;\n    }\n};\n\nvar _Component_TextRenderer_createToken = gs.Component_TextRenderer.prototype.createToken;\ngs.Component_TextRenderer.prototype.createToken = function(code, value) {\n    var tokenObject = _Component_TextRenderer_createToken.apply(this, arguments);\n    if(this.font._defaultBorderColor === undefined) {\n        this.font._defaultBorderColor = this.font.borderColor;\n    }\n    if(code === \"CC\") {\n        tokenObject = new gs.RendererToken(code, value);\n        if(value === \"0\") {\n            this.font.color = gs.Color.fromObject(Font.defaultColor);\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.color = color;\n            }\n        }\n    } else if(code === \"BC\") {\n        tokenObject = new gs.RendererToken(code, value);\n        if(value === \"0\") {\n            this.font.borderColor = this.font._defaultBorderColor;\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.borderColor = color;\n            }\n        }\n    }\n    return tokenObject;\n};\n\nvar _Component_TextRenderer_processControlToken = gs.Component_TextRenderer.prototype.processControlToken;\ngs.Component_TextRenderer.prototype.processControlToken = function(token) {\n    var result = _Component_TextRenderer_processControlToken.apply(this, arguments);\n    if(this.font._defaultBorderColor === undefined) {\n        this.font._defaultBorderColor = this.font.borderColor;\n    }\n    if(token.code === \"CC\") {\n        var value = token.value;\n        if(value === \"0\") {\n            this.font.color = gs.Color.fromObject(Font.defaultColor);\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.color = color;\n            }\n        }\n    } else if(token.code === \"BC\") {\n        var value = token.value;\n        if(value === \"0\") {\n            this.font.borderColor = this.font._defaultBorderColor;\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.borderColor = color;\n            }\n        }\n    }\n    return result;\n};\n\nvar _Component_CommandInterpreter_assignCommand = gs.Component_CommandInterpreter.prototype.assignCommand;\ngs.Component_CommandInterpreter.prototype.assignCommand = function(command) {\n    _Component_CommandInterpreter_assignCommand.apply(this, arguments);\n    if(command.id === \"gs.ShowMessageEditor\") {\n        command.execute = this.commandShowMessage;\n    }\n};\n\n})(SRD.SuperMessageEditor);",
        "parentId": "DD4FD1821620B747AC39A05179085474F201",
        "folder": false,
        "scriptType": 1,
        "compiledContent": "/*************************************************\n *\n * Super Message Editor\n * \n * VNM Game JavaScript File\n *\n * by Robert Borghese (SumRndmDde)\n *\n *************************************************/\n\nvar SRD = SRD || {};\nSRD.SuperMessageEditor = SRD.SuperMessageEditor || {};\nSRD.SuperMessageEditor._version = '1.0.0';\n\n(function(_) {\n\n// Credit: https://stackoverflow.com/a/5624139/8139481\n_.hexToColObj = function(source) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1], 16),\n            green: parseInt(result[2], 16),\n            blue: parseInt(result[3], 16),\n            alpha: 255\n        };\n    } else {\n        return null;\n    }\n};\n\n_.rgbToColObj = function(source) {\n    var result = /^(?:rgb)?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1]),\n            green: parseInt(result[2]),\n            blue: parseInt(result[3]),\n            alpha: 255\n        };\n    } else {\n        return null;\n    }\n};\n\n_.rgbaToColObj = function(source) {\n    var result = /^(?:rgba)?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i.exec(source);\n    if(result) {\n        return {\n            red: parseInt(result[1]),\n            green: parseInt(result[2]),\n            blue: parseInt(result[3]),\n            alpha: parseInt(result[4])\n        };\n    } else {\n        return null;\n    }\n};\n\nvar _Component_TextRenderer_createToken = gs.Component_TextRenderer.prototype.createToken;\ngs.Component_TextRenderer.prototype.createToken = function(code, value) {\n    var tokenObject = _Component_TextRenderer_createToken.apply(this, arguments);\n    if(this.font._defaultBorderColor === undefined) {\n        this.font._defaultBorderColor = this.font.borderColor;\n    }\n    if(code === \"CC\") {\n        tokenObject = new gs.RendererToken(code, value);\n        if(value === \"0\") {\n            this.font.color = gs.Color.fromObject(Font.defaultColor);\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.color = color;\n            }\n        }\n    } else if(code === \"BC\") {\n        tokenObject = new gs.RendererToken(code, value);\n        if(value === \"0\") {\n            this.font.borderColor = this.font._defaultBorderColor;\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.borderColor = color;\n            }\n        }\n    }\n    return tokenObject;\n};\n\nvar _Component_TextRenderer_processControlToken = gs.Component_TextRenderer.prototype.processControlToken;\ngs.Component_TextRenderer.prototype.processControlToken = function(token) {\n    var result = _Component_TextRenderer_processControlToken.apply(this, arguments);\n    if(this.font._defaultBorderColor === undefined) {\n        this.font._defaultBorderColor = this.font.borderColor;\n    }\n    if(token.code === \"CC\") {\n        var value = token.value;\n        if(value === \"0\") {\n            this.font.color = gs.Color.fromObject(Font.defaultColor);\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.color = color;\n            }\n        }\n    } else if(token.code === \"BC\") {\n        var value = token.value;\n        if(value === \"0\") {\n            this.font.borderColor = this.font._defaultBorderColor;\n        } else {\n            value = String(value).trim();\n            var color;\n            if(value.substring(0, 4) === \"rgba\") {\n                color = gs.Color.fromObject(_.rgbaToColObj(value));\n            } else if(value.substring(0, 3) === \"rgb\") {\n                color = gs.Color.fromObject(_.rgbToColObj(value));\n            } else {\n                color = gs.Color.fromObject(_.hexToColObj(value));\n            }\n            if(color) {\n                this.font.borderColor = color;\n            }\n        }\n    }\n    return result;\n};\n\nvar _Component_CommandInterpreter_assignCommand = gs.Component_CommandInterpreter.prototype.assignCommand;\ngs.Component_CommandInterpreter.prototype.assignCommand = function(command) {\n    _Component_CommandInterpreter_assignCommand.apply(this, arguments);\n    if(command.id === \"gs.ShowMessageEditor\") {\n        command.execute = this.commandShowMessage;\n    }\n};\n\n})(SRD.SuperMessageEditor);"
    }
}